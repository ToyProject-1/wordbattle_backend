name: Java CI with Gradle and Kakao Alert and Version Bump

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '.env'  # .env만 바뀐 커밋은 무시하여 루프 방지

permissions:
  contents: write

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/word_battle_backend:${{ env.IMAGE_TAG }} .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/word_battle_backend:${{ env.IMAGE_TAG }}

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted
    steps:
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/word_battle_backend:${{ env.IMAGE_TAG }}

      - name: Stop existing container (if exists)
        run: |
          if sudo docker ps -a --format '{{.Names}}' | grep -Eq '^word_battle_backend$'; then
            sudo docker stop word_battle_backend
          fi
        continue-on-error: true

      - name: Run Docker Container
        run: |
          sudo docker run \
            --name word_battle_backend \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e USE_PROFILE=server \
            --restart unless-stopped \
            -d -p 8080:8080 \
            ${{ secrets.DOCKERHUB_USERNAME }}/word_battle_backend:${{ env.IMAGE_TAG }}

      - name: Delete Old Docker Images
        run: sudo docker image prune -f

      - name: Bump version in .env
        if: success() && github.actor != 'github-actions[bot]'
        run: |
          file=".env"
          if [ ! -f "$file" ]; then
            echo ".env 파일이 존재하지 않습니다."
            exit 1
          fi

          version=$(grep VERSION $file | cut -d '=' -f2)
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"

          echo "VERSION=$new_version" > $file
          echo "Updated version to $new_version"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .env
          git commit -m "ci: bump version to $new_version"
          git push origin main
